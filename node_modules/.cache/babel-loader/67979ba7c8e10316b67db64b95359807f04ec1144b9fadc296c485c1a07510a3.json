{"ast":null,"code":"const API_URL = \"http://localhost:1337/api/tasks\";\nexport async function fetchTasks() {\n  try {\n    const response = await fetch(API_URL);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch tasks.\");\n    }\n    const data = await response.json();\n    return data.data.map(item => ({\n      id: item.id,\n      text: item.text,\n      completed: item.atributes.completed\n    }));\n  } catch (error) {\n    console.error(\"Error while fetching tasks:\", error);\n    throw new Error(\"Failed to fetch tasks. Please try again later.\");\n  }\n}\nexport async function handleAddTask(taskText) {\n  const response = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      data: {\n        text: taskText,\n        completed: false\n      }\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to add task.\");\n  }\n  const newTaskData = await response.json();\n  const newTask = newTaskData.data;\n  return {\n    id: newTask.id,\n    text: newTask.attributes.text,\n    completed: newTask.attributes.completed\n  };\n}\nexport async function handleDeleteTask(id) {\n  try {\n    const response = await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n      method: \"DELETE\"\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to delete task.\");\n    }\n  } catch (error) {\n    console.error(\"Error deleting task:\", error);\n    throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}\nexport async function updateTask(id, completed, text) {\n  const response = await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      data: {\n        text,\n        completed\n      }\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to update task.\");\n  }\n}","map":{"version":3,"names":["API_URL","fetchTasks","response","fetch","ok","Error","data","json","map","item","id","text","completed","atributes","error","console","handleAddTask","taskText","method","headers","body","JSON","stringify","newTaskData","newTask","attributes","handleDeleteTask","concat","updateTask"],"sources":["/home/academy9/Документы/MobX/src/api.ts"],"sourcesContent":["import { TaskItem } from \"./types\";\n\nconst API_URL = \"http://localhost:1337/api/tasks\";\n\nexport async function fetchTasks(): Promise<TaskItem[]> {\n  try {\n    const response = await fetch(API_URL);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch tasks.\");\n    }\n    const data = await response.json();\n    return data.data.map((item: any) => ({\n      id: item.id,\n      text: item.text,\n      completed: item.atributes.completed,\n    }));\n  } catch (error: any) {\n    console.error(\"Error while fetching tasks:\", error);\n    throw new Error(\"Failed to fetch tasks. Please try again later.\");\n  }\n}\n\nexport async function handleAddTask(taskText: string): Promise<TaskItem> {\n  const response = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ data: { text: taskText, completed: false } }),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to add task.\");\n  }\n\n  const newTaskData = await response.json();\n  const newTask = newTaskData.data;\n\n  return {\n    id: newTask.id,\n    text: newTask.attributes.text,\n    completed: newTask.attributes.completed,\n  };\n}\n\nexport async function handleDeleteTask(id: number): Promise<void> {\n  try {\n    const response = await fetch(`${API_URL}/${id}`, {\n      method: \"DELETE\",\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to delete task.\");\n    }\n  } catch (error: any) {\n    console.error(\"Error deleting task:\", error);\n    throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}\n\nexport async function updateTask(\n  id: number,\n  completed: boolean,\n  text: string\n): Promise<void> {\n  const response = await fetch(`${API_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ data: { text, completed } }),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to update task.\");\n  }\n}"],"mappings":"AAEA,MAAMA,OAAO,GAAG,iCAAiC;AAEjD,OAAO,eAAeC,UAAUA,CAAA,EAAwB;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;IACrC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACA,IAAI,CAACE,GAAG,CAAEC,IAAS,KAAM;MACnCC,EAAE,EAAED,IAAI,CAACC,EAAE;MACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,SAAS,EAAEH,IAAI,CAACI,SAAS,CAACD;IAC5B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOE,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAM,IAAIT,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF;AAEA,OAAO,eAAeW,aAAaA,CAACC,QAAgB,EAAqB;EACvE,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;IACpCkB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEhB,IAAI,EAAE;QAAEK,IAAI,EAAEM,QAAQ;QAAEL,SAAS,EAAE;MAAM;IAAE,CAAC;EACrE,CAAC,CAAC;EAEF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxC;EAEA,MAAMkB,WAAW,GAAG,MAAMrB,QAAQ,CAACK,IAAI,CAAC,CAAC;EACzC,MAAMiB,OAAO,GAAGD,WAAW,CAACjB,IAAI;EAEhC,OAAO;IACLI,EAAE,EAAEc,OAAO,CAACd,EAAE;IACdC,IAAI,EAAEa,OAAO,CAACC,UAAU,CAACd,IAAI;IAC7BC,SAAS,EAAEY,OAAO,CAACC,UAAU,CAACb;EAChC,CAAC;AACH;AAEA,OAAO,eAAec,gBAAgBA,CAAChB,EAAU,EAAiB;EAChE,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,IAAAwB,MAAA,CAAI3B,OAAO,OAAA2B,MAAA,CAAIjB,EAAE,GAAI;MAC/CQ,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;EACF,CAAC,CAAC,OAAOS,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAM,IAAIT,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF;AAEA,OAAO,eAAeuB,UAAUA,CAC9BlB,EAAU,EACVE,SAAkB,EAClBD,IAAY,EACG;EACf,MAAMT,QAAQ,GAAG,MAAMC,KAAK,IAAAwB,MAAA,CAAI3B,OAAO,OAAA2B,MAAA,CAAIjB,EAAE,GAAI;IAC/CQ,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEhB,IAAI,EAAE;QAAEK,IAAI;QAAEC;MAAU;IAAE,CAAC;EACpD,CAAC,CAAC;EAEF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}