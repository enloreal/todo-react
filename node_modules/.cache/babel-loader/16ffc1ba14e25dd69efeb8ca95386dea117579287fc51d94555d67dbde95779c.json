{"ast":null,"code":"import { fetchTasks } from \"../api\";\nclass TodoStore {\n  // ... (остальной код без изменений)\n\n  async fetchInitialTasks() {\n    this.isLoading = true;\n    this.message = \"\";\n    try {\n      const fetchedTasks = await fetchTasks();\n      this.tasks = fetchedTasks;\n      this.message = \"❗Tasks loaded from server❗\";\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      this.tasks = []; // Очищаем tasks в случае ошибки загрузки с сервера\n      this.message = \"❗Error loading tasks. Check your internet connection or Strapi server.❗\";\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  async addTask() {\n    // ... (без изменений, но без saveTasksToLocalStorage)\n  }\n  async deleteTask(id) {\n    // ... (без изменений, но без saveTasksToLocalStorage)\n  }\n  async toggleTask(id) {\n    // ... (без изменений, но без saveTasksToLocalStorage)\n  }\n  markAllCompleted() {\n    // ... (без изменений, но без saveTasksToLocalStorage)\n  }\n  deleteCompleted() {\n    // ... (без изменений, но без saveTasksToLocalStorage)\n  }\n\n  // ... (остальной код без изменений)\n}\nexport default new TodoStore();","map":{"version":3,"names":["fetchTasks","TodoStore","fetchInitialTasks","isLoading","message","fetchedTasks","tasks","error","console","addTask","deleteTask","id","toggleTask","markAllCompleted","deleteCompleted"],"sources":["/home/academy9/Документы/MobX/src/store/todoStore.ts"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport { TaskItem } from \"../types\";\nimport { fetchTasks, handleAddTask, updateTask, handleDeleteTask } from \"../api\";\n\nclass TodoStore {\n    // ... (остальной код без изменений)\n\n    async fetchInitialTasks() {\n        this.isLoading = true;\n        this.message = \"\";\n\n        try {\n            const fetchedTasks = await fetchTasks();\n            this.tasks = fetchedTasks;\n            this.message = \"❗Tasks loaded from server❗\";\n        } catch (error: any) {\n            console.error(\"Error fetching tasks:\", error);\n            this.tasks = []; // Очищаем tasks в случае ошибки загрузки с сервера\n            this.message = \"❗Error loading tasks. Check your internet connection or Strapi server.❗\";\n        } finally {\n            this.isLoading = false;\n        }\n    }\n\n    async addTask() {\n        // ... (без изменений, но без saveTasksToLocalStorage)\n    }\n\n    async deleteTask(id: number) {\n        // ... (без изменений, но без saveTasksToLocalStorage)\n    }\n\n    async toggleTask(id: number) {\n        // ... (без изменений, но без saveTasksToLocalStorage)\n    }\n\n    markAllCompleted() {\n        // ... (без изменений, но без saveTasksToLocalStorage)\n    }\n\n    deleteCompleted() {\n        // ... (без изменений, но без saveTasksToLocalStorage)\n    }\n\n     // ... (остальной код без изменений)\n\n}\n\nexport default new TodoStore();"],"mappings":"AAEA,SAASA,UAAU,QAAqD,QAAQ;AAEhF,MAAMC,SAAS,CAAC;EACZ;;EAEA,MAAMC,iBAAiBA,CAAA,EAAG;IACtB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,OAAO,GAAG,EAAE;IAEjB,IAAI;MACA,MAAMC,YAAY,GAAG,MAAML,UAAU,CAAC,CAAC;MACvC,IAAI,CAACM,KAAK,GAAGD,YAAY;MACzB,IAAI,CAACD,OAAO,GAAG,4BAA4B;IAC/C,CAAC,CAAC,OAAOG,KAAU,EAAE;MACjBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,IAAI,CAACD,KAAK,GAAG,EAAE,CAAC,CAAC;MACjB,IAAI,CAACF,OAAO,GAAG,yEAAyE;IAC5F,CAAC,SAAS;MACN,IAAI,CAACD,SAAS,GAAG,KAAK;IAC1B;EACJ;EAEA,MAAMM,OAAOA,CAAA,EAAG;IACZ;EAAA;EAGJ,MAAMC,UAAUA,CAACC,EAAU,EAAE;IACzB;EAAA;EAGJ,MAAMC,UAAUA,CAACD,EAAU,EAAE;IACzB;EAAA;EAGJE,gBAAgBA,CAAA,EAAG;IACf;EAAA;EAGJC,eAAeA,CAAA,EAAG;IACd;EAAA;;EAGH;AAEL;AAEA,eAAe,IAAIb,SAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}