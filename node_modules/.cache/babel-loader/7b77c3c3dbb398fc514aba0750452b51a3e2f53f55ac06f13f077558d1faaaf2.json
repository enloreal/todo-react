{"ast":null,"code":"import _objectSpread from \"/home/academy9/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/MobX/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { makeAutoObservable } from \"mobx\";\nimport { fetchTasks, handleAddTask, handleDeleteTask, updateTask as apiUpdateTask } from \"../api\";\nconst saveTasksToLocalStorage = tasks => {\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n};\nconst getTasksFromLocalStorage = () => {\n  const savedTasks = localStorage.getItem(\"tasks\");\n  try {\n    return savedTasks ? JSON.parse(savedTasks) : [];\n  } catch (error) {\n    console.error(\"Error parsing saved tasks:\", error);\n    return [];\n  }\n};\nclass TodoStore {\n  constructor() {\n    this.tasks = [];\n    this.newTaskText = \"\";\n    this.editingTask = null;\n    this.message = \"\";\n    this.addTask = async () => {\n      if (!this.newTaskText.trim()) return;\n      try {\n        const newTask = await handleAddTask(this.newTaskText);\n        this.tasks.push(newTask);\n        this.newTaskText = \"\";\n      } catch (error) {\n        this.message = \"Failed to add task. Please try again later.\";\n        console.error(error);\n      }\n    };\n    this.deleteTask = async id => {\n      try {\n        await handleDeleteTask(id);\n        this.tasks = this.tasks.filter(task => task.id !== id);\n      } catch (error) {\n        this.message = \"Failed to delete task. Please try again later.\";\n        console.error(error);\n      }\n    };\n    this.updateTask = async updatedTask => {\n      if (updatedTask.text.trim() === \"\") return;\n      try {\n        await apiUpdateTask(updatedTask.id, updatedTask);\n        const taskIndex = this.tasks.findIndex(task => task.id === updatedTask.id);\n        if (taskIndex !== -1) {\n          this.tasks[taskIndex] = updatedTask;\n        }\n        this.editingTask = null;\n      } catch (error) {\n        this.message = \"Failed to update task. Please try again later.\";\n        console.error(error);\n      }\n    };\n    makeAutoObservable(this);\n  }\n  async fetchInitialTasks() {\n    try {\n      const fetchedTasks = await fetchTasks();\n      this.tasks = fetchedTasks;\n      this.message = \"❗Tasks loaded from server❗\";\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      this.message = \"❗Error loading tasks❗\";\n    }\n  }\n  toggleTask(id) {\n    const taskIndex = this.tasks.findIndex(task => task.id === id);\n    if (taskIndex !== -1) {\n      this.tasks[taskIndex].completed = !this.tasks[taskIndex].completed;\n      saveTasksToLocalStorage(this.tasks);\n    }\n  }\n  markAllCompleted() {\n    this.tasks = this.tasks.map(task => _objectSpread(_objectSpread({}, task), {}, {\n      completed: true\n    }));\n    saveTasksToLocalStorage(this.tasks);\n  }\n  deleteCompleted() {\n    this.tasks = this.tasks.filter(task => !task.completed);\n    saveTasksToLocalStorage(this.tasks);\n  }\n  startEditingTask(task) {\n    this.editingTask = task;\n  }\n  cancelEditingTask() {\n    this.editingTask = null;\n  }\n  setNewTaskText(text) {\n    this.newTaskText = text;\n  }\n}\nexport default new TodoStore();","map":{"version":3,"names":["makeAutoObservable","fetchTasks","handleAddTask","handleDeleteTask","updateTask","apiUpdateTask","saveTasksToLocalStorage","tasks","localStorage","setItem","JSON","stringify","getTasksFromLocalStorage","savedTasks","getItem","parse","error","console","TodoStore","constructor","newTaskText","editingTask","message","addTask","trim","newTask","push","deleteTask","id","filter","task","updatedTask","text","taskIndex","findIndex","fetchInitialTasks","fetchedTasks","toggleTask","completed","markAllCompleted","map","_objectSpread","deleteCompleted","startEditingTask","cancelEditingTask","setNewTaskText"],"sources":["/home/academy9/Документы/MobX/src/store/todoStore.ts"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport { TaskItem } from \"../types\";\nimport { fetchTasks, handleAddTask, handleDeleteTask, updateTask as apiUpdateTask } from \"../api\";\n\nconst saveTasksToLocalStorage = (tasks: TaskItem[]): void => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n};\n\nconst getTasksFromLocalStorage = (): TaskItem[] => {\n    const savedTasks = localStorage.getItem(\"tasks\");\n    try {\n        return savedTasks ? JSON.parse(savedTasks) : [];\n    } catch (error) {\n        console.error(\"Error parsing saved tasks:\", error);\n        return [];\n    }\n};\n\n\nclass TodoStore {\n    tasks: TaskItem[] = [];\n    newTaskText: string = \"\";\n    editingTask: TaskItem | null = null;\n    message: string = \"\";\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n\n    async fetchInitialTasks() {\n        try {\n            const fetchedTasks = await fetchTasks();\n            this.tasks = fetchedTasks;\n            this.message = \"❗Tasks loaded from server❗\";\n        } catch (error) {\n            console.error(\"Error fetching tasks:\", error);\n            this.message = \"❗Error loading tasks❗\";\n        }\n    }\n    \n\n\n    addTask = async () => {\n        if (!this.newTaskText.trim()) return;\n    \n        try {\n            const newTask = await handleAddTask(this.newTaskText);\n            this.tasks.push(newTask);\n            this.newTaskText = \"\";\n        } catch (error) {\n            this.message = \"Failed to add task. Please try again later.\";\n            console.error(error);\n        }\n    };\n\n\ndeleteTask = async (id: number) => {\n    try {\n        await handleDeleteTask(id);\n        this.tasks = this.tasks.filter((task) => task.id !== id);\n    } catch (error) {\n        this.message = \"Failed to delete task. Please try again later.\";\n        console.error(error);\n    }\n};\n\n    toggleTask(id: number) {\n        const taskIndex = this.tasks.findIndex((task) => task.id === id);\n        if (taskIndex !== -1) {\n            this.tasks[taskIndex].completed = !this.tasks[taskIndex].completed;\n            saveTasksToLocalStorage(this.tasks);\n        }\n    }\n\n\n    markAllCompleted() {\n        this.tasks = this.tasks.map((task) => ({ ...task, completed: true }));\n        saveTasksToLocalStorage(this.tasks);\n    }\n\n    deleteCompleted() {\n        this.tasks = this.tasks.filter((task) => !task.completed);\n        saveTasksToLocalStorage(this.tasks);\n    }\n\n    startEditingTask(task: TaskItem) {\n        this.editingTask = task;\n    }\n\n    cancelEditingTask() {\n        this.editingTask = null;\n    }\n\n    updateTask = async (updatedTask: TaskItem) => {\n        if (updatedTask.text.trim() === \"\") return;\n    \n        try {\n            await apiUpdateTask(updatedTask.id, updatedTask);\n    \n            const taskIndex = this.tasks.findIndex((task) => task.id === updatedTask.id);\n            if (taskIndex !== -1) {\n                this.tasks[taskIndex] = updatedTask;\n            }\n            this.editingTask = null;\n        } catch (error) {\n            this.message = \"Failed to update task. Please try again later.\";\n            console.error(error);\n        }\n    };\n\n    setNewTaskText(text: string) {\n        this.newTaskText = text;\n    }\n\n\n}\n\n\nexport default new TodoStore();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}