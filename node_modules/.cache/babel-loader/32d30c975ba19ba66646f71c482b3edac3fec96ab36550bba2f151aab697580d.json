{"ast":null,"code":"const API_URL = \"https://jsonplaceholder.typicode.com/todos\";\nexport async function fetchTasks() {\n  try {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    return data.map(item => ({\n      id: item.id,\n      text: item.title,\n      completed: item.completed\n    }));\n  } catch (error) {\n    console.error(\"Error while fetching tasks:\");\n    throw new Error(\"Failed to fetch tasks. Please try again later.\");\n  }\n}\nexport async function handleAddTask(taskText) {\n  try {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      body: JSON.stringify({\n        title: taskText,\n        completed: false,\n        userId: 1\n      })\n    });\n    const newTask = await response.json();\n    return {\n      id: Date.now(),\n      text: taskText,\n      completed: false\n    };\n  } catch (error) {\n    console.error(\"Error adding task:\");\n    throw new Error(\"Failed to add task. Please try again later.\");\n  }\n}\nexport async function handleDeleteTask(id) {\n  try {\n    await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n      method: \"DELETE\"\n    });\n  } catch (error) {\n    console.error(\"Error deleting task:\");\n    throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}\nexport async function updateTask(id, completed, text) {\n  await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n    method: \"PUT\",\n    body: JSON.stringify({\n      id: id,\n      title: text,\n      completed: completed,\n      userId: 1\n    })\n  });\n}","map":{"version":3,"names":["API_URL","fetchTasks","response","fetch","data","json","map","item","id","text","title","completed","error","console","Error","handleAddTask","taskText","method","body","JSON","stringify","userId","newTask","Date","now","handleDeleteTask","concat","updateTask"],"sources":["/home/academy9/Документы/MobX/src/api.ts"],"sourcesContent":["import { TaskItem } from \"./types\";\n\nconst API_URL = \"https://jsonplaceholder.typicode.com/todos\";\n\nexport async function fetchTasks(): Promise<TaskItem[]> {\n  try {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    return data.map((item: any) => ({\n      id: item.id,\n      text: item.title,\n      completed: item.completed,\n    }));\n  } catch (error: any) {\n    console.error(\"Error while fetching tasks:\");\n    throw new Error(\"Failed to fetch tasks. Please try again later.\");\n  }\n}\n\nexport async function handleAddTask(taskText: string): Promise<TaskItem> {\n  try {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      body: JSON.stringify({\n        title: taskText,\n        completed: false,\n        userId: 1,\n      }),\n    });\n    const newTask = await response.json();\n    return {\n      id: Date.now(),\n      text: taskText,\n      completed: false,\n    };\n  } catch (error: any) {\n    console.error(\"Error adding task:\");\n    throw new Error(\"Failed to add task. Please try again later.\");\n  }\n}\n\nexport async function handleDeleteTask(id: number): Promise<void> {\n  try {\n    await fetch(`${API_URL}/${id}`, {\n      method: \"DELETE\",\n    });\n  } catch (error: any) {\n    console.error(\"Error deleting task:\");\n    throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}\n\nexport async function updateTask(\n  id: number,\n  completed: boolean,\n  text: string\n): Promise<void> {\n  await fetch(`${API_URL}/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      id: id,\n      title: text,\n      completed: completed,\n      userId: 1,\n    }),\n  });\n}\n"],"mappings":"AAEA,MAAMA,OAAO,GAAG,4CAA4C;AAE5D,OAAO,eAAeC,UAAUA,CAAA,EAAwB;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;IACrC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,GAAG,CAAEC,IAAS,KAAM;MAC9BC,EAAE,EAAED,IAAI,CAACC,EAAE;MACXC,IAAI,EAAEF,IAAI,CAACG,KAAK;MAChBC,SAAS,EAAEJ,IAAI,CAACI;IAClB,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;IAC5C,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF;AAEA,OAAO,eAAeC,aAAaA,CAACC,QAAgB,EAAqB;EACvE,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;MACpCiB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBV,KAAK,EAAEM,QAAQ;QACfL,SAAS,EAAE,KAAK;QAChBU,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IACF,MAAMC,OAAO,GAAG,MAAMpB,QAAQ,CAACG,IAAI,CAAC,CAAC;IACrC,OAAO;MACLG,EAAE,EAAEe,IAAI,CAACC,GAAG,CAAC,CAAC;MACdf,IAAI,EAAEO,QAAQ;MACdL,SAAS,EAAE;IACb,CAAC;EACH,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAC;IACnC,MAAM,IAAIE,KAAK,CAAC,6CAA6C,CAAC;EAChE;AACF;AAEA,OAAO,eAAeW,gBAAgBA,CAACjB,EAAU,EAAiB;EAChE,IAAI;IACF,MAAML,KAAK,IAAAuB,MAAA,CAAI1B,OAAO,OAAA0B,MAAA,CAAIlB,EAAE,GAAI;MAC9BS,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOL,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;IACrC,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF;AAEA,OAAO,eAAea,UAAUA,CAC9BnB,EAAU,EACVG,SAAkB,EAClBF,IAAY,EACG;EACf,MAAMN,KAAK,IAAAuB,MAAA,CAAI1B,OAAO,OAAA0B,MAAA,CAAIlB,EAAE,GAAI;IAC9BS,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBZ,EAAE,EAAEA,EAAE;MACNE,KAAK,EAAED,IAAI;MACXE,SAAS,EAAEA,SAAS;MACpBU,MAAM,EAAE;IACV,CAAC;EACH,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}