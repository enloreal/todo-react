{"ast":null,"code":"import _objectSpread from \"/home/academy9/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/MobX/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/academy9/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/MobX/src/TaskEdit.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { StyledInput, StyledButtonSave, StyledButtonCancel } from \"./styles/themes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskEdit = _ref => {\n  _s();\n  let {\n    task,\n    onSave,\n    onCancel\n  } = _ref;\n  const [editedText, setEditedText] = useState(task.text);\n  const handleSave = () => {\n    onSave(_objectSpread(_objectSpread({}, task), {}, {\n      text: editedText\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n      type: \"text\",\n      value: editedText,\n      onChange: e => setEditedText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButtonSave, {\n      onClick: handleSave,\n      children: \"\\u2714\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButtonCancel, {\n      onClick: onCancel,\n      children: \"\\u2718\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskEdit, \"tzwy1yCszFYaf3XPMHk83Cp5mWg=\");\n_c = TaskEdit;\nexport default TaskEdit;\nvar _c;\n$RefreshReg$(_c, \"TaskEdit\");","map":{"version":3,"names":["React","useState","StyledInput","StyledButtonSave","StyledButtonCancel","jsxDEV","_jsxDEV","TaskEdit","_ref","_s","task","onSave","onCancel","editedText","setEditedText","text","handleSave","_objectSpread","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/academy9/Документы/MobX/src/TaskEdit.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TaskEditProps } from \"./types\";\nimport {\n  StyledInput,\n  StyledButtonSave,\n  StyledButtonCancel,\n} from \"./styles/themes\";\n\nconst TaskEdit: React.FC<TaskEditProps> = ({ task, onSave, onCancel }) => {\n  const [editedText, setEditedText] = useState(task.text);\n\n  const handleSave = () => {\n    onSave({ ...task, text: editedText });\n  };\n\n  return (\n    <div>\n      <StyledInput\n        type=\"text\"\n        value={editedText}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEditedText(e.target.value)}\n      />\n      <StyledButtonSave onClick={handleSave}>✔</StyledButtonSave>\n      <StyledButtonCancel onClick={onCancel}>✘</StyledButtonCancel>\n    </div>\n  );\n};\n\nexport default TaskEdit;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SACEC,WAAW,EACXC,gBAAgB,EAChBC,kBAAkB,QACb,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAiC,GAAGC,IAAA,IAAgC;EAAAC,EAAA;EAAA,IAA/B;IAAEC,IAAI;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EACnE,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAACS,IAAI,CAACK,IAAI,CAAC;EAEvD,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBL,MAAM,CAAAM,aAAA,CAAAA,aAAA,KAAMP,IAAI;MAAEK,IAAI,EAAEF;IAAU,EAAE,CAAC;EACvC,CAAC;EAED,oBACEP,OAAA;IAAAY,QAAA,gBACEZ,OAAA,CAACJ,WAAW;MACViB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEP,UAAW;MAClBQ,QAAQ,EAAGC,CAAsC,IAAKR,aAAa,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC,eACFrB,OAAA,CAACH,gBAAgB;MAACyB,OAAO,EAAEZ,UAAW;MAAAE,QAAA,EAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC,eAC3DrB,OAAA,CAACF,kBAAkB;MAACwB,OAAO,EAAEhB,QAAS;MAAAM,QAAA,EAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlBIF,QAAiC;AAAAsB,EAAA,GAAjCtB,QAAiC;AAoBvC,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}