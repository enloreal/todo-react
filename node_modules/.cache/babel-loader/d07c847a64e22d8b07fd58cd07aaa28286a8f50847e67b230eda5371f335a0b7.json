{"ast":null,"code":"const API_URL = \"http://localhost:1337/api/tasks\";\nexport async function fetchTasks() {\n  try {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    return data.data.map(item => ({\n      id: item.id,\n      text: item.text,\n      completed: item.completed\n    }));\n  } catch (error) {\n    console.error(\"Error while fetching tasks:\");\n    throw new Error(\"Failed to fetch tasks. Please try again later.\");\n  }\n}\nexport async function handleAddTask(taskText) {\n  const response = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      data: {\n        text: taskText,\n        completed: false\n      }\n    })\n  });\n  const newTaskData = await response.json();\n  const newTask = newTaskData.data;\n  return {\n    \"data\": {\n      \"text\": \"postman task\",\n      \"completed\": \"true\"\n    }\n  };\n}\nexport async function handleDeleteTask(id) {\n  try {\n    await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n      method: \"DELETE\"\n    });\n  } catch (error) {\n    console.error(\"Error deleting task:\");\n    throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}\nexport async function updateTask(id, completed, text) {\n  await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n    method: \"PUT\",\n    body: JSON.stringify({\n      id: id,\n      title: text,\n      completed: completed,\n      userId: 1\n    })\n  });\n}","map":{"version":3,"names":["API_URL","fetchTasks","response","fetch","data","json","map","item","id","text","completed","error","console","Error","handleAddTask","taskText","method","headers","body","JSON","stringify","newTaskData","newTask","handleDeleteTask","concat","updateTask","title","userId"],"sources":["/home/academy9/Документы/MobX/src/api.ts"],"sourcesContent":["import { TaskItem } from \"./types\";\n\nconst API_URL = \"http://localhost:1337/api/tasks\";\n\nexport async function fetchTasks(): Promise<TaskItem[]> {\n  try {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    return data.data.map((item: any) => ({\n      id: item.id,\n      text: item.text,\n      completed: item.completed,\n    }));\n  } catch (error: any) {\n    console.error(\"Error while fetching tasks:\");\n    throw new Error(\"Failed to fetch tasks. Please try again later.\");\n  }\n}\n\nexport async function handleAddTask(taskText: string): Promise<TaskItem> {\n  const response = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ data: { text: taskText, completed: false } }),\n  });\n\n  const newTaskData = await response.json();\n  const newTask = newTaskData.data;\n\n  return {\n    \"data\":{\n        \"text\": \"postman task\",\n        \"completed\": \"true\"\n    }\n};\n}\n\nexport async function handleDeleteTask(id: number): Promise<void> {\n  try {\n    await fetch(`${API_URL}/${id}`, {\n      method: \"DELETE\",\n    });\n  } catch (error: any) {\n    console.error(\"Error deleting task:\");\n    throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}\n\nexport async function updateTask(\n  id: number,\n  completed: boolean,\n  text: string\n): Promise<void> {\n  await fetch(`${API_URL}/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      id: id,\n      title: text,\n      completed: completed,\n      userId: 1,\n    }),\n  });\n}\n"],"mappings":"AAEA,MAAMA,OAAO,GAAG,iCAAiC;AAEjD,OAAO,eAAeC,UAAUA,CAAA,EAAwB;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;IACrC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACA,IAAI,CAACE,GAAG,CAAEC,IAAS,KAAM;MACnCC,EAAE,EAAED,IAAI,CAACC,EAAE;MACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,SAAS,EAAEH,IAAI,CAACG;IAClB,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;IAC5C,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF;AAEA,OAAO,eAAeC,aAAaA,CAACC,QAAgB,EAAqB;EACvE,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;IACpCgB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEhB,IAAI,EAAE;QAAEK,IAAI,EAAEM,QAAQ;QAAEL,SAAS,EAAE;MAAM;IAAE,CAAC;EACrE,CAAC,CAAC;EAEF,MAAMW,WAAW,GAAG,MAAMnB,QAAQ,CAACG,IAAI,CAAC,CAAC;EACzC,MAAMiB,OAAO,GAAGD,WAAW,CAACjB,IAAI;EAEhC,OAAO;IACL,MAAM,EAAC;MACH,MAAM,EAAE,cAAc;MACtB,WAAW,EAAE;IACjB;EACJ,CAAC;AACD;AAEA,OAAO,eAAemB,gBAAgBA,CAACf,EAAU,EAAiB;EAChE,IAAI;IACF,MAAML,KAAK,IAAAqB,MAAA,CAAIxB,OAAO,OAAAwB,MAAA,CAAIhB,EAAE,GAAI;MAC9BQ,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOL,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;IACrC,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF;AAEA,OAAO,eAAeY,UAAUA,CAC9BjB,EAAU,EACVE,SAAkB,EAClBD,IAAY,EACG;EACf,MAAMN,KAAK,IAAAqB,MAAA,CAAIxB,OAAO,OAAAwB,MAAA,CAAIhB,EAAE,GAAI;IAC9BQ,MAAM,EAAE,KAAK;IACbE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBZ,EAAE,EAAEA,EAAE;MACNkB,KAAK,EAAEjB,IAAI;MACXC,SAAS,EAAEA,SAAS;MACpBiB,MAAM,EAAE;IACV,CAAC;EACH,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}