{"ast":null,"code":"const API_URL = \"http://localhost:1337/api/tasks\";\nexport async function fetchTasks() {\n  try {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    return data.data.map(item => ({\n      id: item.id,\n      text: item.text,\n      completed: item.completed,\n      documentId: item.id\n    }));\n  } catch (error) {\n    console.error(\"Error while fetching tasks:\");\n    throw new Error(\"Failed to fetch tasks. Please try again later.\");\n  }\n}\nexport async function handleAddTask(taskText) {\n  try {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        data: {\n          text: taskText,\n          completed: false\n        }\n      })\n    });\n    const newTask = await response.json();\n    return {\n      id: newTask.data.id,\n      documentId: newTask.data.documentId,\n      text: newTask.data.text,\n      completed: newTask.data.completed\n    };\n  } catch (error) {\n    console.error(\"Error adding task:\");\n    throw new Error(\"Failed to add task. Please try again later.\");\n  }\n}\nexport async function handleDeleteTask(documentId) {\n  try {\n    await fetch(\"\".concat(API_URL, \"/\").concat(documentId), {\n      method: \"DELETE\"\n    });\n  } catch (error) {\n    console.error(\"Error deleting task:\");\n    throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}\nexport async function updateTask(documentId, completed, text) {\n  try {\n    await fetch(\"\".concat(API_URL, \"/\").concat(documentId), {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        data: {\n          text,\n          completed\n        }\n      })\n    });\n  } catch (error) {\n    console.error(\"Error updating task:\");\n    throw new Error(\"Failed to update task. Please try again later.\");\n  }\n}","map":{"version":3,"names":["API_URL","fetchTasks","response","fetch","data","json","map","item","id","text","completed","documentId","error","console","Error","handleAddTask","taskText","method","headers","body","JSON","stringify","newTask","handleDeleteTask","concat","updateTask"],"sources":["/home/academy9/Документы/MobX/src/api.ts"],"sourcesContent":["import { TaskItem } from \"./types\";\n\nconst API_URL = \"http://localhost:1337/api/tasks\";\n\nexport async function fetchTasks(): Promise<TaskItem[]> {\n  try {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    return data.data.map((item: any) => ({\n      id: item.id,\n      text: item.text,\n      completed: item.completed,\n      documentId: item.id \n    }));\n  } catch (error: any) {\n    console.error(\"Error while fetching tasks:\");\n    throw new Error(\"Failed to fetch tasks. Please try again later.\");\n  }\n}\n\nexport async function handleAddTask(taskText: string): Promise<TaskItem> {\n  try {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        data: {\n          text: taskText,\n          completed: false,\n        },\n      }),\n    });\nconst newTask = await response.json();\nreturn {\n  id: newTask.data.id,\n  documentId: newTask.data.documentId,\n  text: newTask.data.text,\n  completed: newTask.data.completed,\n};\n  } catch (error: any) {\n    console.error(\"Error adding task:\");\n    throw new Error(\"Failed to add task. Please try again later.\");\n  }\n}\n\nexport async function handleDeleteTask(documentId: string): Promise<void> {\n  try {\n      await fetch(`${API_URL}/${documentId}`, {\n          method: \"DELETE\",\n      });\n  } catch (error: any) {\n      console.error(\"Error deleting task:\");\n      throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}\n\nexport async function updateTask(documentId: string, completed: boolean, text: string): Promise<void> {\n  try {\n    await fetch(`${API_URL}/${documentId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        data: {\n          text,\n          completed,\n        },\n      }),\n    });\n  } catch (error: any) {\n    console.error(\"Error updating task:\");\n    throw new Error(\"Failed to update task. Please try again later.\");\n  }\n}\n"],"mappings":"AAEA,MAAMA,OAAO,GAAG,iCAAiC;AAEjD,OAAO,eAAeC,UAAUA,CAAA,EAAwB;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;IACrC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACA,IAAI,CAACE,GAAG,CAAEC,IAAS,KAAM;MACnCC,EAAE,EAAED,IAAI,CAACC,EAAE;MACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,SAAS,EAAEH,IAAI,CAACG,SAAS;MACzBC,UAAU,EAAEJ,IAAI,CAACC;IACnB,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOI,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;IAC5C,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF;AAEA,OAAO,eAAeC,aAAaA,CAACC,QAAgB,EAAqB;EACvE,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;MACpCiB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBjB,IAAI,EAAE;UACJK,IAAI,EAAEO,QAAQ;UACdN,SAAS,EAAE;QACb;MACF,CAAC;IACH,CAAC,CAAC;IACN,MAAMY,OAAO,GAAG,MAAMpB,QAAQ,CAACG,IAAI,CAAC,CAAC;IACrC,OAAO;MACLG,EAAE,EAAEc,OAAO,CAAClB,IAAI,CAACI,EAAE;MACnBG,UAAU,EAAEW,OAAO,CAAClB,IAAI,CAACO,UAAU;MACnCF,IAAI,EAAEa,OAAO,CAAClB,IAAI,CAACK,IAAI;MACvBC,SAAS,EAAEY,OAAO,CAAClB,IAAI,CAACM;IAC1B,CAAC;EACC,CAAC,CAAC,OAAOE,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAC;IACnC,MAAM,IAAIE,KAAK,CAAC,6CAA6C,CAAC;EAChE;AACF;AAEA,OAAO,eAAeS,gBAAgBA,CAACZ,UAAkB,EAAiB;EACxE,IAAI;IACA,MAAMR,KAAK,IAAAqB,MAAA,CAAIxB,OAAO,OAAAwB,MAAA,CAAIb,UAAU,GAAI;MACpCM,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC,CAAC,OAAOL,KAAU,EAAE;IACjBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;IACrC,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACrE;AACF;AAEA,OAAO,eAAeW,UAAUA,CAACd,UAAkB,EAAED,SAAkB,EAAED,IAAY,EAAiB;EACpG,IAAI;IACF,MAAMN,KAAK,IAAAqB,MAAA,CAAIxB,OAAO,OAAAwB,MAAA,CAAIb,UAAU,GAAI;MACtCM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBjB,IAAI,EAAE;UACJK,IAAI;UACJC;QACF;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOE,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;IACrC,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}