{"ast":null,"code":"import _objectSpread from \"/home/academy9/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/MobX/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { makeAutoObservable } from \"mobx\";\nimport { fetchTasks, handleAddTask, updateTask, handleDeleteTask } from \"../api\";\nconst saveTasksToLocalStorage = tasks => {\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n};\nconst getTasksFromLocalStorage = () => {\n  const savedTasks = localStorage.getItem(\"tasks\");\n  try {\n    return savedTasks ? JSON.parse(savedTasks) : [];\n  } catch (error) {\n    console.error(\"Error parsing saved tasks:\", error);\n    return [];\n  }\n};\nclass TodoStore {\n  // Добавлено состояние загрузки\n\n  constructor() {\n    this.tasks = [];\n    this.newTaskText = \"\";\n    this.editingTask = null;\n    this.message = \"\";\n    this.isLoading = false;\n    makeAutoObservable(this);\n  }\n  async fetchInitialTasks() {\n    this.isLoading = true; // Начало загрузки\n    this.message = \"\"; // Очищаем сообщение об ошибке\n\n    try {\n      const fetchedTasks = await fetchTasks();\n      this.tasks = fetchedTasks;\n      this.message = \"❗Tasks loaded from server❗\";\n      saveTasksToLocalStorage(this.tasks);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      this.tasks = getTasksFromLocalStorage();\n      this.message = \"\\u2757Error loading tasks: \".concat(error.message, \"\\u2757\"); // Выводим сообщение об ошибке\n    } finally {\n      this.isLoading = false; // Завершение загрузки\n    }\n  }\n  async addTask() {\n    if (!this.newTaskText.trim()) return;\n    this.isLoading = true; // Начало загрузки\n    this.message = \"\"; // Очищаем сообщение об ошибке\n\n    try {\n      const newTask = await handleAddTask(this.newTaskText);\n      this.tasks.push(newTask);\n      this.newTaskText = \"\";\n      saveTasksToLocalStorage(this.tasks);\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n      this.message = \"\\u2757Error adding task: \".concat(error.message, \"\\u2757\");\n    } finally {\n      this.isLoading = false; // Завершение загрузки\n    }\n  }\n  async deleteTask(id) {\n    this.isLoading = true;\n    this.message = \"\";\n    try {\n      await handleDeleteTask(id);\n      this.tasks = this.tasks.filter(task => task.id !== id);\n      saveTasksToLocalStorage(this.tasks);\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      this.message = \"\\u2757Error deleting task: \".concat(error.message, \"\\u2757\");\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  async toggleTask(id) {\n    const taskIndex = this.tasks.findIndex(task => task.id === id);\n    if (taskIndex !== -1) {\n      this.isLoading = true;\n      this.message = \"\";\n      try {\n        const updatedTask = _objectSpread(_objectSpread({}, this.tasks[taskIndex]), {}, {\n          completed: !this.tasks[taskIndex].completed\n        });\n        await updateTask(updatedTask);\n        this.tasks[taskIndex] = updatedTask;\n        saveTasksToLocalStorage(this.tasks);\n      } catch (error) {\n        console.error(\"Error toggling task:\", error);\n        this.message = \"\\u2757Error toggling task: \".concat(error.message, \"\\u2757\");\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n  markAllCompleted() {\n    // В реальном приложении здесь нужно отправлять запрос на сервер для обновления всех задач\n    this.tasks = this.tasks.map(task => _objectSpread(_objectSpread({}, task), {}, {\n      completed: true\n    }));\n    saveTasksToLocalStorage(this.tasks);\n  }\n  deleteCompleted() {\n    // В реальном приложении здесь нужно отправлять запрос на сервер для удаления выполненных задач\n    this.tasks = this.tasks.filter(task => !task.completed);\n    saveTasksToLocalStorage(this.tasks);\n  }\n  startEditingTask(task) {\n    this.editingTask = task;\n  }\n  cancelEditingTask() {\n    this.editingTask = null;\n  }\n  async updateTask(updatedTask) {\n    if (updatedTask.text.trim() === \"\") return;\n    this.isLoading = true;\n    this.message = \"\";\n    try {\n      await updateTask(updatedTask);\n      const taskIndex = this.tasks.findIndex(task => task.id === updatedTask.id);\n      if (taskIndex !== -1) {\n        this.tasks[taskIndex] = updatedTask;\n      }\n      this.editingTask = null;\n      saveTasksToLocalStorage(this.tasks);\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n      this.message = \"\\u2757Error updating task: \".concat(error.message, \"\\u2757\");\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  setNewTaskText(text) {\n    this.newTaskText = text;\n  }\n}\nexport default new TodoStore();","map":{"version":3,"names":["makeAutoObservable","fetchTasks","handleAddTask","updateTask","handleDeleteTask","saveTasksToLocalStorage","tasks","localStorage","setItem","JSON","stringify","getTasksFromLocalStorage","savedTasks","getItem","parse","error","console","TodoStore","constructor","newTaskText","editingTask","message","isLoading","fetchInitialTasks","fetchedTasks","concat","addTask","trim","newTask","push","deleteTask","id","filter","task","toggleTask","taskIndex","findIndex","updatedTask","_objectSpread","completed","markAllCompleted","map","deleteCompleted","startEditingTask","cancelEditingTask","text","setNewTaskText"],"sources":["/home/academy9/Документы/MobX/src/store/todoStore.ts"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport { TaskItem } from \"../types\";\nimport { fetchTasks, handleAddTask, updateTask, handleDeleteTask } from \"../api\";\n\n\nconst saveTasksToLocalStorage = (tasks: TaskItem[]): void => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n};\n\nconst getTasksFromLocalStorage = (): TaskItem[] => {\n    const savedTasks = localStorage.getItem(\"tasks\");\n    try {\n        return savedTasks ? JSON.parse(savedTasks) : [];\n    } catch (error) {\n        console.error(\"Error parsing saved tasks:\", error);\n        return [];\n    }\n};\n\nclass TodoStore {\n    tasks: TaskItem[] = [];\n    newTaskText: string = \"\";\n    editingTask: TaskItem | null = null;\n    message: string = \"\";\n    isLoading: boolean = false; // Добавлено состояние загрузки\n\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    async fetchInitialTasks() {\n      this.isLoading = true; // Начало загрузки\n      this.message = \"\"; // Очищаем сообщение об ошибке\n\n        try {\n            const fetchedTasks = await fetchTasks();\n            this.tasks = fetchedTasks;\n            this.message = \"❗Tasks loaded from server❗\";\n            saveTasksToLocalStorage(this.tasks)\n        } catch (error: any) {\n            console.error(\"Error fetching tasks:\", error);\n            this.tasks = getTasksFromLocalStorage();\n            this.message = `❗Error loading tasks: ${error.message}❗`; // Выводим сообщение об ошибке\n        } finally {\n          this.isLoading = false; // Завершение загрузки\n        }\n    }\n\n\n    async addTask() {\n        if (!this.newTaskText.trim()) return;\n        this.isLoading = true; // Начало загрузки\n        this.message = \"\"; // Очищаем сообщение об ошибке\n\n        try {\n          const newTask = await handleAddTask(this.newTaskText);\n          this.tasks.push(newTask);\n          this.newTaskText = \"\";\n          saveTasksToLocalStorage(this.tasks)\n        } catch (error: any) {\n          console.error(\"Error adding task:\", error);\n          this.message = `❗Error adding task: ${error.message}❗`;\n        } finally {\n          this.isLoading = false; // Завершение загрузки\n        }\n    }\n\n    async deleteTask(id: number) {\n        this.isLoading = true;\n        this.message = \"\";\n\n        try {\n          await handleDeleteTask(id);\n          this.tasks = this.tasks.filter((task) => task.id !== id);\n          saveTasksToLocalStorage(this.tasks)\n\n        } catch (error: any) {\n          console.error(\"Error deleting task:\", error);\n          this.message = `❗Error deleting task: ${error.message}❗`;\n        } finally {\n          this.isLoading = false;\n        }\n    }\n\n    async toggleTask(id: number) {\n        const taskIndex = this.tasks.findIndex((task) => task.id === id);\n        if (taskIndex !== -1) {\n          this.isLoading = true;\n          this.message = \"\";\n    \n          try {\n            const updatedTask = { ...this.tasks[taskIndex], completed: !this.tasks[taskIndex].completed };\n            await updateTask(updatedTask);\n            this.tasks[taskIndex] = updatedTask;\n            saveTasksToLocalStorage(this.tasks)\n          } catch (error: any) {\n            console.error(\"Error toggling task:\", error);\n            this.message = `❗Error toggling task: ${error.message}❗`;\n          } finally {\n            this.isLoading = false;\n          }\n        }\n    }\n\n    markAllCompleted() {\n        // В реальном приложении здесь нужно отправлять запрос на сервер для обновления всех задач\n        this.tasks = this.tasks.map((task) => ({ ...task, completed: true }));\n        saveTasksToLocalStorage(this.tasks)\n    }\n\n    deleteCompleted() {\n        // В реальном приложении здесь нужно отправлять запрос на сервер для удаления выполненных задач\n        this.tasks = this.tasks.filter((task) => !task.completed);\n        saveTasksToLocalStorage(this.tasks)\n\n    }\n\n    startEditingTask(task: TaskItem) {\n        this.editingTask = task;\n    }\n\n    cancelEditingTask() {\n        this.editingTask = null;\n    }\n\n    async updateTask(updatedTask: TaskItem) {\n      if (updatedTask.text.trim() === \"\") return;\n      this.isLoading = true;\n      this.message = \"\";\n\n      try {\n        await updateTask(updatedTask);\n        const taskIndex = this.tasks.findIndex((task) => task.id === updatedTask.id);\n        if (taskIndex !== -1) {\n          this.tasks[taskIndex] = updatedTask;\n        }\n        this.editingTask = null;\n        saveTasksToLocalStorage(this.tasks)\n      } catch (error: any) {\n        console.error(\"Error updating task:\", error);\n        this.message = `❗Error updating task: ${error.message}❗`;\n      } finally {\n        this.isLoading = false;\n      }\n    }\n\n\n    setNewTaskText(text: string) {\n        this.newTaskText = text;\n    }\n}\n\nexport default new TodoStore();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}