{"ast":null,"code":"const API_URL = \"http://localhost:1337/api/tasks\";\nexport async function fetchTasks() {\n  try {\n    const response = await fetch(API_URL);\n    if (!response.ok) {\n      // Проверка на ошибки сети\n      throw new Error(\"Network response was not ok: \".concat(response.status));\n    }\n    const data = await response.json();\n    return data.data.map(item => ({\n      id: item.id,\n      // Используем существующий id\n      text: item.attributes.text,\n      completed: item.attributes.completed\n    }));\n  } catch (error) {\n    console.error(\"Error while fetching tasks:\", error);\n    throw new Error(\"Failed to fetch tasks. Please try again later.\"); // Передаем ошибку дальше для обработки\n  }\n}\nexport async function handleAddTask(taskText) {\n  try {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        data: {\n          text: taskText,\n          completed: false\n        }\n      })\n    });\n    const newTask = await response.json();\n    return newTask.data;\n  } catch (error) {\n    console.error(\"Error adding task:\", error);\n    throw new Error(\"Failed to add task. Please try again later.\");\n  }\n}\nexport async function updateTask(id, updatedTask) {\n  try {\n    await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: updatedTask\n      })\n    });\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw new Error('Failed to update task. Please try again later.');\n  }\n}\nexport async function handleDeleteTask(id) {\n  try {\n    await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n      method: \"DELETE\"\n    });\n  } catch (error) {\n    console.error(\"Error deleting task:\", error);\n    throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}","map":{"version":3,"names":["API_URL","fetchTasks","response","fetch","ok","Error","concat","status","data","json","map","item","id","text","attributes","completed","error","console","handleAddTask","taskText","method","headers","body","JSON","stringify","newTask","updateTask","updatedTask","handleDeleteTask"],"sources":["/home/academy9/Документы/MobX/src/api.ts"],"sourcesContent":["import { TaskItem } from \"./types\";\n\nconst API_URL = \"http://localhost:1337/api/tasks\";\n\nexport async function fetchTasks(): Promise<TaskItem[]> {\n  try {\n    const response = await fetch(API_URL);\n    if (!response.ok) { // Проверка на ошибки сети\n      throw new Error(`Network response was not ok: ${response.status}`);\n    }\n    const data = await response.json();\n    return data.data.map((item: any) => ({\n      id: item.id, // Используем существующий id\n      text: item.attributes.text,\n      completed: item.attributes.completed,\n    }));\n  } catch (error: any) {\n    console.error(\"Error while fetching tasks:\", error);\n    throw new Error(\"Failed to fetch tasks. Please try again later.\"); // Передаем ошибку дальше для обработки\n  }\n}\n\nexport async function handleAddTask(taskText: string): Promise<TaskItem> {\n  try {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ data: { text: taskText, completed: false } }),\n    });\n    const newTask = await response.json();\n    return newTask.data;\n  } catch (error: any) {\n    console.error(\"Error adding task:\", error);\n    throw new Error(\"Failed to add task. Please try again later.\");\n  }\n}\n\n\nexport async function updateTask(id: number, updatedTask: TaskItem): Promise<void> {\n  try {\n\n    await fetch(`${API_URL}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({data: updatedTask})\n    });\n\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw new Error('Failed to update task. Please try again later.')\n  }\n}\n\n\n\n\nexport async function handleDeleteTask(id: number): Promise<void> {\n  try {\n    await fetch(`${API_URL}/${id}`, {\n      method: \"DELETE\",\n    });\n  } catch (error: any) {\n    console.error(\"Error deleting task:\", error);\n    throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}\n"],"mappings":"AAEA,MAAMA,OAAO,GAAG,iCAAiC;AAEjD,OAAO,eAAeC,UAAUA,CAAA,EAAwB;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;IACrC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAAE;MAClB,MAAM,IAAIC,KAAK,iCAAAC,MAAA,CAAiCJ,QAAQ,CAACK,MAAM,CAAE,CAAC;IACpE;IACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACA,IAAI,CAACE,GAAG,CAAEC,IAAS,KAAM;MACnCC,EAAE,EAAED,IAAI,CAACC,EAAE;MAAE;MACbC,IAAI,EAAEF,IAAI,CAACG,UAAU,CAACD,IAAI;MAC1BE,SAAS,EAAEJ,IAAI,CAACG,UAAU,CAACC;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAM,IAAIX,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAC;EACrE;AACF;AAEA,OAAO,eAAea,aAAaA,CAACC,QAAgB,EAAqB;EACvE,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;MACpCoB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB,IAAI,EAAE;UAAEK,IAAI,EAAEM,QAAQ;UAAEJ,SAAS,EAAE;QAAM;MAAE,CAAC;IACrE,CAAC,CAAC;IACF,MAAMU,OAAO,GAAG,MAAMvB,QAAQ,CAACO,IAAI,CAAC,CAAC;IACrC,OAAOgB,OAAO,CAACjB,IAAI;EACrB,CAAC,CAAC,OAAOQ,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAM,IAAIX,KAAK,CAAC,6CAA6C,CAAC;EAChE;AACF;AAGA,OAAO,eAAeqB,UAAUA,CAACd,EAAU,EAAEe,WAAqB,EAAiB;EACjF,IAAI;IAEF,MAAMxB,KAAK,IAAAG,MAAA,CAAIN,OAAO,OAAAM,MAAA,CAAIM,EAAE,GAAI;MAC9BQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAChB,IAAI,EAAEmB;MAAW,CAAC;IAC1C,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAOX,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAM,IAAIX,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF;AAKA,OAAO,eAAeuB,gBAAgBA,CAAChB,EAAU,EAAiB;EAChE,IAAI;IACF,MAAMT,KAAK,IAAAG,MAAA,CAAIN,OAAO,OAAAM,MAAA,CAAIM,EAAE,GAAI;MAC9BQ,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOJ,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAM,IAAIX,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}