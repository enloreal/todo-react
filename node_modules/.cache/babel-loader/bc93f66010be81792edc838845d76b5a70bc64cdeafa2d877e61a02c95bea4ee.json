{"ast":null,"code":"const API_URL = \"http://localhost:1337/api/tasks\";\nexport async function fetchTasks() {\n  try {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    return data.data.map(item => ({\n      id: item.id,\n      text: item.text,\n      completed: item.completed\n    }));\n  } catch (error) {\n    console.error(\"Error while fetching tasks:\", error);\n    throw new Error(\"Failed to fetch tasks. Please try again later.\");\n  }\n}\nexport async function handleAddTask(taskText) {\n  try {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        data: {\n          text: taskText,\n          completed: false\n        }\n      })\n    });\n    const newTask = await response.json();\n    return newTask.data; // Возвращаем данные новой задачи\n  } catch (error) {\n    console.error(\"Error adding task:\", error);\n    throw new Error(\"Failed to add task. Please try again later.\");\n  }\n}\nexport async function updateTask(id, updatedTask) {\n  try {\n    await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: updatedTask\n      })\n    });\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw new Error('Failed to update task. Please try again later.');\n  }\n}\nexport async function handleDeleteTask(id) {\n  try {\n    await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n      method: \"DELETE\"\n    });\n  } catch (error) {\n    console.error(\"Error deleting task:\", error);\n    throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}","map":{"version":3,"names":["API_URL","fetchTasks","response","fetch","data","json","map","item","id","text","completed","error","console","Error","handleAddTask","taskText","method","headers","body","JSON","stringify","newTask","updateTask","updatedTask","concat","handleDeleteTask"],"sources":["/home/academy9/Документы/MobX/src/api.ts"],"sourcesContent":["import { TaskItem } from \"./types\";\n\nconst API_URL = \"http://localhost:1337/api/tasks\";\n\nexport async function fetchTasks(): Promise<TaskItem[]> {\n  try {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    return data.data.map((item: any) => ({\n      id: item.id,\n      text: item.text,\n      completed: item.completed,\n    }));\n  } catch (error: any) {\n    console.error(\"Error while fetching tasks:\", error);\n    throw new Error(\"Failed to fetch tasks. Please try again later.\");\n  }\n}\n\nexport async function handleAddTask(taskText: string): Promise<TaskItem> {\n  try {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ data: { text: taskText, completed: false } }),\n    });\n    const newTask = await response.json();\n    return newTask.data; // Возвращаем данные новой задачи\n  } catch (error: any) {\n    console.error(\"Error adding task:\", error);\n    throw new Error(\"Failed to add task. Please try again later.\");\n  }\n}\n\n\nexport async function updateTask(id: number, updatedTask: TaskItem): Promise<void> {\n  try {\n\n    await fetch(`${API_URL}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({data: updatedTask})\n    });\n\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw new Error('Failed to update task. Please try again later.')\n  }\n}\n\n\n\n\nexport async function handleDeleteTask(id: number): Promise<void> {\n  try {\n    await fetch(`${API_URL}/${id}`, {\n      method: \"DELETE\",\n    });\n  } catch (error: any) {\n    console.error(\"Error deleting task:\", error);\n    throw new Error(\"Failed to delete task. Please try again later.\");\n  }\n}\n"],"mappings":"AAEA,MAAMA,OAAO,GAAG,iCAAiC;AAEjD,OAAO,eAAeC,UAAUA,CAAA,EAAwB;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;IACrC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACA,IAAI,CAACE,GAAG,CAAEC,IAAS,KAAM;MACnCC,EAAE,EAAED,IAAI,CAACC,EAAE;MACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,SAAS,EAAEH,IAAI,CAACG;IAClB,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF;AAEA,OAAO,eAAeC,aAAaA,CAACC,QAAgB,EAAqB;EACvE,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;MACpCgB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB,IAAI,EAAE;UAAEK,IAAI,EAAEM,QAAQ;UAAEL,SAAS,EAAE;QAAM;MAAE,CAAC;IACrE,CAAC,CAAC;IACF,MAAMW,OAAO,GAAG,MAAMnB,QAAQ,CAACG,IAAI,CAAC,CAAC;IACrC,OAAOgB,OAAO,CAACjB,IAAI,CAAC,CAAC;EACvB,CAAC,CAAC,OAAOO,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAM,IAAIE,KAAK,CAAC,6CAA6C,CAAC;EAChE;AACF;AAGA,OAAO,eAAeS,UAAUA,CAACd,EAAU,EAAEe,WAAqB,EAAiB;EACjF,IAAI;IAEF,MAAMpB,KAAK,IAAAqB,MAAA,CAAIxB,OAAO,OAAAwB,MAAA,CAAIhB,EAAE,GAAI;MAC9BQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAChB,IAAI,EAAEmB;MAAW,CAAC;IAC1C,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF;AAKA,OAAO,eAAeY,gBAAgBA,CAACjB,EAAU,EAAiB;EAChE,IAAI;IACF,MAAML,KAAK,IAAAqB,MAAA,CAAIxB,OAAO,OAAAwB,MAAA,CAAIhB,EAAE,GAAI;MAC9BQ,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOL,KAAU,EAAE;IACnBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}